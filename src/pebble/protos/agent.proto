syntax = "proto3";

package pebble;

service AgentService {
  rpc GetStatus(Empty) returns (StatusResponse) {}
  rpc ProcessAction(ActionRequest) returns (ActionResponse) {}
  rpc Listen(AudioRequest) returns (ActionResponse) {}
  rpc ViewImage(ImageRequest) returns (ActionResponse) {}
  rpc ViewVideo(VideoRequest) returns (ActionResponse) {}
}

message Empty {}

message StatusResponse {
  string agent_id = 1;
  string name = 2;
  string framework = 3;
  string status = 4;
  repeated string capabilities = 5;
  map<string, string> metadata = 6;
}

message ActionRequest {
  string agent_id = 1;
  string session_id = 2;
  string message = 3;
  string role = 4;
  bool stream = 5;
  map<string, string> metadata = 6;
}

message ActionResponse {
  string agent_id = 1;
  string session_id = 2;
  string message = 3;
  string role = 4;
  map<string, string> metadata = 5;
  repeated ToolCall tool_calls = 6;
}

message ToolCall {
  string name = 1;
  map<string, string> arguments = 2;
}

message AudioRequest {
  string agent_id = 1;
  string session_id = 2;
  oneof audio_content {
    string url = 3;
    bytes content = 4;
  }
  string mime_type = 5;
  map<string, string> metadata = 6;
}

message ImageRequest {
  string agent_id = 1;
  string session_id = 2;
  oneof image_content {
    string url = 3;
    bytes content = 4;
  }
  string mime_type = 5;
  int32 width = 6;
  int32 height = 7;
  string alt_text = 8;
  map<string, string> metadata = 9;
}

message VideoRequest {
  string agent_id = 1;
  string session_id = 2;
  oneof video_content {
    string url = 3;
    bytes content = 4;
  }
  string mime_type = 5;
  int32 width = 6;
  int32 height = 7;
  double duration = 8;
  map<string, string> metadata = 9;
}